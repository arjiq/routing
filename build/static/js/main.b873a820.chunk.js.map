{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","name","onChange","contacts","value","selected","map","contact","ket","AppointmentForm","title","setTitle","setContact","setDate","date","time","setTime","handleSubmit","onSubmit","type","e","target","required","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tile","className","Object","values","index","TileList","tiles","AppointmentsPage","appointments","addAppointments","useState","length","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","undefined","find","preventDefault","App","setAppointments","setContacts","ROUTES","to","activeClassName","exact","path","addAppointment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b873a820.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({name, onChange, contacts}) => {\r\n  return (\r\n    <select name={name} onChange={onChange}>\r\n      <option value={\"\"} key={-1} selected=\"selected\">\r\n        Select A Contact\r\n      </option>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <option value={contact} ket={contact}>\r\n            {contact}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const getContactNames = () => {\r\n    return contacts.map((contact) => contact.name);\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n      <input \r\n      name=\"title\"\r\n      type=\"text\"\r\n      value={title}\r\n      onChange={(e)=> {\r\n        setTitle(e.target.value)\r\n      }}\r\n      required\r\n      placeholder=\"Appointment Title\"\r\n      />\r\n      </label>\r\n      <br />\r\n      <label>\r\n      <input \r\n      name=\"date\"\r\n      type=\"date\"\r\n      min={getTodayString()}\r\n      onChange={(e) => {\r\n        setDate(e.target.value)\r\n      }}\r\n      required\r\n      />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input \r\n        name=\"time\"\r\n        type=\"time\"\r\n        value={time}\r\n        onChange={(e) => {\r\n          setTime(e.target.value)\r\n        }}\r\n        required\r\n        />\r\n      </label>\r\n      <br />\r\n      <ContactPicker\r\n      name=\"contact\"\r\n      value={contact}\r\n      contacts={getContactNames()}\r\n      onChange={(e) => {\r\n        setContact(e.target.value)\r\n      }}\r\n      placeholder=\"Appointment with\"\r\n      \r\n      />\r\n      <br />\r\n      <input type=\"submit\" value=\"Add Appointment\" />\r\n\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({ tile}) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {Object.values(tile).map((value,index) => (\r\n        <p key={index} className={`${index === 0 ? \"tile-title\" : \"\"}tile`}>\r\n          {value}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from '../tile/Tile';\r\n\r\nexport const TileList = ({tiles}) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((tile,index) => (\r\n        <Tile key={index} tile={tile} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {AppointmentForm} from '../../components/appointmentForm/AppointmentForm';\r\nimport {TileList} from '../../components/tileList/TileList';\r\nexport const AppointmentsPage = ({appointments, addAppointments, contacts}) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n    const [title, setTitle] = useState(\"\");\r\n    const [contact, setContact] = useState(contacts.length > 0 ? contacts[0].name : '');\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n \r\n    const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n   addAppointments(title, contact, date , time);\r\n   setTitle(\"\");\r\n   setContact(\"\");\r\n   setDate(\"\");\r\n   setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm \r\n        contacts={contacts}\r\n        title={title}\r\n        setTitle={setTitle}\r\n        contact={contact}\r\n        setContact={setContact}\r\n        date={date}\r\n        setDate={setDate}\r\n        time={time}\r\n        setTime={setTime}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n      <input \r\n      name=\"name\" \r\n      type=\"text\" \r\n      value={name}\r\n      onChange={(e)=> {\r\n       setName(e.target.value) \r\n      }}\r\n      required\r\n      placeholder=\"Contact Name\"\r\n      />\r\n      </label>\r\n      <br />\r\n      <label>\r\n      <input \r\n       name=\"phone\"\r\n       type=\"tel\"\r\n       value={phone}\r\n       onChange={(e) => {\r\n         setPhone(e.target.value)\r\n       }}\r\n       required\r\n       pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\"\r\n       placeholder=\"Contact Number (###-###-####)\"\r\n      \r\n      />\r\n      </label>\r\n      <br />\r\n      <label>\r\n      <input\r\n      name=\"email\"\r\n      type=\"email\"\r\n      value={email}\r\n      onChange={(e) => {\r\n        setEmail(e.target.value)\r\n      }}\r\n      required\r\n      placeholder=\"Contact Email\"\r\n      />\r\n      </label>\r\n      <br />\r\n      <input type=\"submit\" value=\"Add Contact\" />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      addContact(name, phone, email);\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const nameIsDuplicate = () => {\r\n      const found = contacts.find((contact) => contact.name === name);\r\n      if (found !== undefined) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (nameIsDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [name, contacts, duplicate]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          {duplicate ? \" - Name Already Exists\" : \"\"}\r\n        </h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments([\r\n      ...appointments,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts([\r\n      ...contacts,\r\n      {\r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage\r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n              contacts={contacts}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}